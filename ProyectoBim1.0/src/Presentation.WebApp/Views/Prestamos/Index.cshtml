@{
    ViewData["Title"] = "Préstamos";
}

@model List<Domain.Entities.IM253E01Prestamo>

<div class="container mt-4">
    <h1 class="mb-4">Lista de Préstamos</h1>

    <a asp-action="Create" class="btn btn-primary mb-3">Crear Nuevo Préstamo</a>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Libro</th>
                <th>Fecha de Préstamo</th>
                <th>Fecha de Devolución</th> @* Añadida columna para FechaDevolucion *@
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prestamo in Model)
            {
                <tr>
                    <td>@prestamo.Usuario?.Nombre ?? "N/A"</td> @* Muestra el nombre del usuario *@
                    <td>
                        @if (prestamo.Libro != null)
                        {
                            <span>@prestamo.Libro.Autor @(string.IsNullOrEmpty(prestamo.Libro.ISBN) ? "" : $" (ISBN: {prestamo.Libro.ISBN})")</span>
                        }
                        else
                        {
                            <span>Libro no especificado</span>
                        }
                    </td> @* Muestra autor y ISBN del libro *@
                    <td>@prestamo.FechaPrestamo.ToShortDateString()</td>
                    <td>@(prestamo.FechaDevolucion?.ToShortDateString() ?? "Pendiente")</td> @* Muestra fecha de devolución o "Pendiente" *@
                    <td>
                        <a asp-action="Details" asp-route-id="@prestamo.Id" class="btn btn-info btn-sm">Detalles</a>
                        <a asp-action="Edit" asp-route-id="@prestamo.Id" class="btn btn-warning btn-sm">Editar</a>
                        @* Para la eliminación POST, lo ideal es usar JavaScript como en Libros/Index.cshtml o un formulario *@
                        <a href="#" onclick="confirmDeletePrestamo('@prestamo.Id');" class="btn btn-danger btn-sm">Eliminar</a>
                    </td>
                </tr>
            }
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="5">No se encontraron préstamos.</td> @* Ajustado el colspan *@
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function confirmDeletePrestamo(id) {
            if (confirm("¿Estás seguro de que quieres eliminar este préstamo? Esta acción no se puede deshacer.")) {
                // Utiliza un formulario oculto para enviar la solicitud POST
                var form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("Delete", "Prestamos")/' + id; // Apunta al método POST DeleteConfirmed
                
                // Agrega el token de verificación si estás usando [ValidateAntiForgeryToken]
                var antiForgeryInput = document.createElement('input');
                antiForgeryInput.type = 'hidden';
                antiForgeryInput.name = '__RequestVerificationToken';
                antiForgeryInput.value = '@Html.AntiForgeryToken()'.match(/value="([^"]*)"/)[1]; // Extrae el token
                form.appendChild(antiForgeryInput);

                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}