@{
    ViewData["Title"] = "Libros";
}

@model List<Domain.Entities.IM253E01Libro>

<a asp-action="Create">Crear Nuevo Libro</a>

<h1>
    Lista de Libros:
</h1>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchId" class="form-control" placeholder="Buscar por ID..." value="@ViewData["CurrentIdFilter"]" />
        <input type="text" name="searchString" class="form-control" placeholder="Buscar por Autor..." value="@ViewData["CurrentStringFilter"]" /> @* Título eliminado del placeholder *@
        <div class="input-group-append">
            <button type="submit" class="btn btn-outline-secondary">Buscar</button>
            <a asp-action="Index" class="btn btn-outline-secondary">Limpiar</a>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"] as string))
    {
        <p style="color:red;">@ViewData["ErrorMessage"]</p>
    }
</form>

<table>
    <thead>
        <tr>
            <th>Id</th> 
            @* Se eliminó <th>Título</th> *@
            <th>Autor</th>
            @* Se eliminó <th>Fecha de Publicación</th> *@
            <th>Editorial</th> @* Añadida Editorial para mostrar todas las columnas existentes en la BD *@
            <th>ISBN</th> @* Añadida ISBN para mostrar todas las columnas existentes en la BD *@
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var libro in Model)
        {
            <tr>
                <td>@libro.Id</td> 
                @* Se eliminó <td>@libro.Titulo</td> *@
                <td>@libro.Autor</td>
                <td>@(libro.Editorial ?? "N/A")</td> @* Muestra Editorial, con "N/A" si es nulo *@
                <td>@libro.ISBN</td> @* Muestra ISBN *@
                @* Se eliminó el bloque de FechaPublicacion *@
                <td>
                    <a asp-action="Details" asp-route-id="@libro.Id">Detalles</a> |
                    <a asp-action="Edit" asp-route-id="@libro.Id">Editar</a> |
                    <a href="#" onclick="confirmDeleteLibro('@libro.Id'); return false;">Eliminar</a>
                </td>
            </tr>
        }
        @if (!Model.Any())
        {
            <tr>
                <td colspan="5">No se encontraron libros.</td> @* Se ajustó el colspan a 5 (Id, Autor, Editorial, ISBN, Acciones) *@
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        // Función de confirmación para eliminar libros
        function confirmDeleteLibro(id) {
            if (confirm("¿Estás seguro de que quieres eliminar este libro? Esta acción no se puede deshacer.")) {
                // Se cambió a POST para el método DeleteConfirmed
                $.post('@Url.Action("Delete", "Libros")', { id: id }, function () {
                    window.location.reload(); // Recargar la página después de eliminar
                });
            }
        }
    </script>
}